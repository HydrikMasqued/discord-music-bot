name: Deploy to Cybrancee Cloud

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Create test config files
      run: |
        cp .env.example .env
        cp config.example.txt config.txt
        # Set dummy values for testing
        sed -i 's/YOUR_DISCORD_BOT_TOKEN_HERE/dummy_token_for_testing/' config.txt
        sed -i 's/YOUR_DISCORD_USER_ID_HERE/123456789012345678/' config.txt
        sed -i 's/your_discord_bot_token_here/dummy_token_for_testing/' .env
        sed -i 's/your_discord_user_id_here/123456789012345678/' .env
    
    - name: Build Docker image
      run: |
        docker build -t discord-music-bot:test .
    
    - name: Test Docker container
      run: |
        # Test if container starts without errors
        docker run --rm -d --name test-musicbot discord-music-bot:test
        sleep 10
        # Check if container is still running (it should exit due to dummy token, but shouldn't crash)
        docker logs test-musicbot
    
    - name: Validate configuration files
      run: |
        # Check if all required files exist
        test -f Dockerfile
        test -f docker-compose.yml
        test -f .env.example
        test -f config.example.txt
        test -f deploy.sh
        echo "All required files are present!"

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run security scan
      run: |
        # Check for sensitive data in committed files
        if grep -r "NDExMjQ3MzkwODkzMjc3MTk0" . --exclude-dir=.git --exclude="*.md" --exclude=".env.example" --exclude="config.example.txt"; then
          echo "WARNING: Potential Discord token found in committed files!"
          exit 1
        fi
        echo "Security scan passed - no tokens found in committed files"

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub (Optional)
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          hydrikmasqued/discord-music-bot:latest
          hydrikmasqued/discord-music-bot:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Deploy to Cybrancee (Staging)
      if: github.event_name != 'pull_request'
      run: |
        echo "Deploying to Cybrancee staging environment..."
        # Add your Cybrancee deployment commands here
        # This could involve API calls to Cybrancee or webhook triggers
        echo "Deployment to staging completed!"

  notify:
    runs-on: ubuntu-latest
    needs: [deploy-staging]
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy-staging.result }}" == "success" ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi
